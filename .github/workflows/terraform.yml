name: "vprofile IAC"
on:
  push: 
    branches: 
      - main
      - stage
    paths: 
      - '!terraform/**'  # Ignoring all changes in the terraform directory
  pull_request: 
    branches: 
      - main
    paths: 
      - '!terraform/**'  # Ignoring all changes in the terraform directory

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks
  CIDR: 172.20.0.0/16
  CERT_ARN: ${{ secrets.CERT_ARN }}

jobs:
  terraform:
    name: "Apply Terraform Code Changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ env.BUCKET_TF_STATE }}"

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

      - name: Set Up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Kube Config
        id: getconfig
        if: steps.apply.outcome == 'success'
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

      - name: Install TLS Ingress Controller
        if: steps.apply.outcome == 'success' && steps.getconfig.outcome == 'success'
        run: |
          wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.12.0-beta.0/deploy/static/provider/aws/nlb-with-tls-termination/deploy.yaml
          sed -i 's|proxy-real-ip-cidr:.*|proxy-real-ip-cidr: ${{ env.CIDR }}|' deploy.yaml
          sed -i 's|arn:aws:acm:us-west-2:.*|${{ env.CERT_ARN }}|' deploy.yaml
          kubectl apply -f deploy.yaml